# This is a placeholder to add all the config checks
# and inits process used in Klippain

[delayed_gcode KLIPPAIN_STARTUP]
initial_duration: 1
gcode:
    _KLIPPAIN_STARTUP


[gcode_macro _KLIPPAIN_STARTUP]
gcode:
    # Print system information using the system_info.py script to log them in the klippy.log
    # RUN_SHELL_COMMAND CMD=system_info

    # Dump the MCU version to the console for the Klippy log
    _INIT_MCU_VER

    ## Set the startup status LED
    _INIT_LEDS

    # User custom startup process. Define them in your overrides.cfg if needed :)
    _INIT_USERCUSTOM

    RESPOND MSG="Printer started and ready!"


[gcode_macro _INIT_LEDS]
gcode:
    {% if printer["gcode_macro _USER_VARIABLES"].status_leds_enabled or printer["gcode_macro _USER_VARIABLES"].status_leds_caselight_enabled %}
        {% if printer["gcode_macro _USER_VARIABLES"].caselight_on_at_startup|default(False) %}
            STATUS_LEDS COLOR="READY"
            LIGHT_ON S=100
        {% else %}
            STATUS_LEDS COLOR="OFF"
        {% endif %}
    {% endif %}


[gcode_macro _INIT_MCU_VER]
gcode:
    {% set parameters = namespace(output = 'Currently configured MCU(s): \n') %}
    {% for name1 in printer %}
        {% for name2 in printer[name1] %}
        {% set show = ['mcu_version'] %}
        {% if name2 is in show %}
            {% set param = "%s: %s" % (name1, printer[name1][name2]) %}
            {% set parameters.output = parameters.output +  param + "\n" %}
        {% endif %}
        {% endfor %}
    {% endfor %}
    {action_respond_info(parameters.output)}


[gcode_macro _INIT_USERCUSTOM]
gcode:
    # ---- CUSTOM Macro section
    # this section is reserved for personal customized user startup
    # in order to use this, create a new macro in your overrides.cfg
    # [gcode_macro _INIT_USERCUSTOM]
    # gcode:
    #   ## Your custom code here
