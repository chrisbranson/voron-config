[mcu scanner]
canbus_uuid: 101e115cbfd6
#serial: /dev/serial/by-id/usb-cartographer_cartographer_
#    adjust to suit your scanner, if using usb change to serial

[scanner]
mcu: scanner
#   Offsets are measured from the centre of your coil, to the tip of your nozzle
#   on a level axis. It is vital that this is accurate.
x_offset: 0
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: 15
#    adjust for your cartographers offset from nozzle to middle of coil
# backlash_comp: 0.5
backlash_comp: 0.01820
# Median distance moving up 1.98726, down 2.00547, delta 0.01820 over 20 samples
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc
mesh_runs: 2
#    Number of passes to make during mesh scan.

[bed_mesh]
zero_reference_position: 150, 150
#    set this to the middle of your bed
speed: 200
#    movement speed of toolhead during bed mesh
horizontal_move_z: 5
#    height of scanner during bed mesh scan
mesh_min: 15, 15
#    start point of bed mesh [X, Y]
mesh_max: 275, 275
#    end point of bed mesh [X, Y]
probe_count: 30, 30
algorithm: bicubic

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105

[safe_z_home]
home_xy_position: 150,150
z_hop: 10

#[adxl345]
#cs_pin: scanner:PA3
#spi_bus: spi1

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    125, 125, 20

[stepper_z]
endstop_pin: probe:z_virtual_endstop # uses cartographer as virtual endstop
homing_retract_dist: 0 # cartographer needs this to be set to 0
#position_endstop: 5 # cartographer needs this to be commented out
